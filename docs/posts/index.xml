<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Fwame&#39;s writeup collection</title>
    <link>https://writeups.deflame.xyz/posts/</link>
    <description>Recent content in Posts on Fwame&#39;s writeup collection</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Jan 2023 09:00:00 -0700</lastBuildDate>
    <atom:link href="https://writeups.deflame.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RPS</title>
      <link>https://writeups.deflame.xyz/posts/mocactf24/rps/</link>
      <pubDate>Sun, 15 Jan 2023 09:00:00 -0700</pubDate>
      <guid>https://writeups.deflame.xyz/posts/mocactf24/rps/</guid>
      <description>In this challenge we&amp;rsquo;re given a rock-paper-scissors playing server with a custom cookie system and our objective is to win 100 consecutive games. The state is stored completely inside of a session cookie encrypted with a custom symmetric cipher.&#xA;import json import os from random import SystemRandom from base64 import b64decode, b64encode from dataclasses import asdict, dataclass, field from hashlib import sha256 from zlib import crc32 from Crypto.Cipher import AES from flask import Flask, make_response, render_template, request app = Flask(__name__) FLAG = os.</description>
    </item>
    <item>
      <title>RSA W Leak</title>
      <link>https://writeups.deflame.xyz/posts/mocactf24/rsa-w-leak/</link>
      <pubDate>Sun, 15 Jan 2023 09:00:00 -0700</pubDate>
      <guid>https://writeups.deflame.xyz/posts/mocactf24/rsa-w-leak/</guid>
      <description>Like the name implies, this is a normal RSA with leak challenge: we are given a standard RSA public key, ciphertext and a leak $$ \text{leak} = \lfloor2^{8192}(\frac{r_0}{\phi(N)} + \frac{r_1}{N}) \rfloor$$ with $r_0$ and $r_1$ random integers.&#xA;from Crypto.Util.number import getStrongPrime import secrets from mpmath import mp, mpf p = getStrongPrime(1024) q = getStrongPrime(1024) n = p*q e = 65537 phi = (p-1)*(q-1) d = pow(e, -1, phi) mp.dps = 8192 leak = mpf(secrets.</description>
    </item>
  </channel>
</rss>
